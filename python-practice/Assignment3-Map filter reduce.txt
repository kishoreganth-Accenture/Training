a = [2,4,6,8,7]
b = [1,2,3,4]
dd={1:23,2:23,3:54,4:43}
ddo ={1:3,2:123,3:34,4:32}
x = lambda x : x*2 
print(x(5))
print(x(b))

A = map(lambda x : x*2,b)
print(A)
print(list(A))

# B = map(pow() , a,b)
C = map(pow,[1,2],[3,4])
print(list(C))

#unequal list 
add = map(lambda i,j:i+j,a,b)
print(list(add))

#unequal list when print is given 
def addnum(a,b):
    print(a+b)
    return a+b 
x = list(map(addnum,a,b))
print(x)

#map condition 
y = list(map(lambda a :a%2==0,b))
print(y)
z = list(filter(lambda a: a%2==0,b))
print(z)

#map with dictionary 
d = list(map(lambda a : dd[a],dd))
print(d)
dadd = list(map(lambda a,b:dd[a]+dd[b],dd,ddo))
print(dadd)

#lambda wtih if 
lif = list(map(lambda a: "even" if (a %2==0) else "odd" ,b))
print(lif)


#accumulators 
import itertools 
accu = list(itertools.accumulate(a,lambda a,b: a+b))
print(accu)




